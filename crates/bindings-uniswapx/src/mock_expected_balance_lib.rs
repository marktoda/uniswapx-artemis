pub use mock_expected_balance_lib::*;
/// This module was auto-generated with ethers-rs Abigen.
/// More information at: <https://github.com/gakonst/ethers-rs>
#[allow(
    clippy::enum_variant_names,
    clippy::too_many_arguments,
    clippy::upper_case_acronyms,
    clippy::type_complexity,
    dead_code,
    non_camel_case_types,
)]
pub mod mock_expected_balance_lib {
    #[rustfmt::skip]
    const __ABI: &str = "[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"actualBalance\",\"type\":\"uint256\",\"components\":[]},{\"internalType\":\"uint256\",\"name\":\"expectedBalance\",\"type\":\"uint256\",\"components\":[]}],\"type\":\"error\",\"name\":\"InsufficientOutput\",\"outputs\":[]},{\"inputs\":[{\"internalType\":\"struct ExpectedBalance[]\",\"name\":\"expected\",\"type\":\"tuple[]\",\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\",\"components\":[]},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\",\"components\":[]},{\"internalType\":\"uint256\",\"name\":\"expectedBalance\",\"type\":\"uint256\",\"components\":[]}]}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"check\",\"outputs\":[]}]";
    ///The parsed JSON ABI of the contract.
    pub static MOCKEXPECTEDBALANCELIB_ABI: ::ethers::contract::Lazy<
        ::ethers::core::abi::Abi,
    > = ::ethers::contract::Lazy::new(|| {
        ::ethers::core::utils::__serde_json::from_str(__ABI)
            .expect("ABI is always valid")
    });
    #[rustfmt::skip]
    const __BYTECODE: &[u8] = &[
        96,
        128,
        96,
        64,
        82,
        52,
        128,
        21,
        97,
        0,
        16,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        4,
        132,
        128,
        97,
        0,
        32,
        96,
        0,
        57,
        96,
        0,
        243,
        254,
        96,
        128,
        96,
        64,
        82,
        52,
        128,
        21,
        97,
        0,
        16,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        96,
        4,
        54,
        16,
        97,
        0,
        43,
        87,
        96,
        0,
        53,
        96,
        224,
        28,
        128,
        99,
        227,
        164,
        216,
        107,
        20,
        97,
        0,
        48,
        87,
        91,
        96,
        0,
        128,
        253,
        91,
        97,
        0,
        67,
        97,
        0,
        62,
        54,
        96,
        4,
        97,
        2,
        197,
        86,
        91,
        97,
        0,
        69,
        86,
        91,
        0,
        91,
        97,
        0,
        78,
        129,
        97,
        0,
        81,
        86,
        91,
        80,
        86,
        91,
        96,
        0,
        91,
        129,
        81,
        129,
        16,
        21,
        97,
        1,
        29,
        87,
        96,
        0,
        130,
        130,
        129,
        81,
        129,
        16,
        97,
        0,
        113,
        87,
        97,
        0,
        113,
        97,
        3,
        167,
        86,
        91,
        96,
        32,
        2,
        96,
        32,
        1,
        1,
        81,
        144,
        80,
        96,
        0,
        97,
        0,
        174,
        130,
        96,
        0,
        1,
        81,
        131,
        96,
        32,
        1,
        81,
        115,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        22,
        97,
        1,
        33,
        144,
        145,
        144,
        99,
        255,
        255,
        255,
        255,
        22,
        86,
        91,
        144,
        80,
        129,
        96,
        64,
        1,
        81,
        129,
        16,
        21,
        97,
        1,
        8,
        87,
        128,
        130,
        96,
        64,
        1,
        81,
        96,
        64,
        81,
        127,
        44,
        25,
        184,
        184,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        129,
        82,
        96,
        4,
        1,
        97,
        0,
        255,
        146,
        145,
        144,
        145,
        130,
        82,
        96,
        32,
        130,
        1,
        82,
        96,
        64,
        1,
        144,
        86,
        91,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        80,
        80,
        128,
        128,
        97,
        1,
        21,
        144,
        97,
        3,
        214,
        86,
        91,
        145,
        80,
        80,
        97,
        0,
        84,
        86,
        91,
        80,
        80,
        86,
        91,
        96,
        0,
        115,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        131,
        22,
        97,
        1,
        92,
        87,
        80,
        115,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        129,
        22,
        49,
        97,
        1,
        239,
        86,
        91,
        96,
        64,
        81,
        127,
        112,
        160,
        130,
        49,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        129,
        82,
        115,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        131,
        129,
        22,
        96,
        4,
        131,
        1,
        82,
        132,
        22,
        144,
        99,
        112,
        160,
        130,
        49,
        144,
        96,
        36,
        1,
        96,
        32,
        96,
        64,
        81,
        128,
        131,
        3,
        129,
        134,
        90,
        250,
        21,
        128,
        21,
        97,
        1,
        200,
        87,
        61,
        96,
        0,
        128,
        62,
        61,
        96,
        0,
        253,
        91,
        80,
        80,
        80,
        80,
        96,
        64,
        81,
        61,
        96,
        31,
        25,
        96,
        31,
        130,
        1,
        22,
        130,
        1,
        128,
        96,
        64,
        82,
        80,
        129,
        1,
        144,
        97,
        1,
        236,
        145,
        144,
        97,
        4,
        53,
        86,
        91,
        144,
        80,
        91,
        146,
        145,
        80,
        80,
        86,
        91,
        127,
        78,
        72,
        123,
        113,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        96,
        0,
        82,
        96,
        65,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        96,
        64,
        81,
        96,
        96,
        129,
        1,
        103,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        129,
        17,
        130,
        130,
        16,
        23,
        21,
        97,
        2,
        71,
        87,
        97,
        2,
        71,
        97,
        1,
        245,
        86,
        91,
        96,
        64,
        82,
        144,
        86,
        91,
        96,
        64,
        81,
        96,
        31,
        130,
        1,
        127,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        224,
        22,
        129,
        1,
        103,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        129,
        17,
        130,
        130,
        16,
        23,
        21,
        97,
        2,
        148,
        87,
        97,
        2,
        148,
        97,
        1,
        245,
        86,
        91,
        96,
        64,
        82,
        145,
        144,
        80,
        86,
        91,
        128,
        53,
        115,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        129,
        22,
        129,
        20,
        97,
        2,
        192,
        87,
        96,
        0,
        128,
        253,
        91,
        145,
        144,
        80,
        86,
        91,
        96,
        0,
        96,
        32,
        128,
        131,
        133,
        3,
        18,
        21,
        97,
        2,
        216,
        87,
        96,
        0,
        128,
        253,
        91,
        130,
        53,
        103,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        128,
        130,
        17,
        21,
        97,
        2,
        240,
        87,
        96,
        0,
        128,
        253,
        91,
        129,
        133,
        1,
        145,
        80,
        133,
        96,
        31,
        131,
        1,
        18,
        97,
        3,
        4,
        87,
        96,
        0,
        128,
        253,
        91,
        129,
        53,
        129,
        129,
        17,
        21,
        97,
        3,
        22,
        87,
        97,
        3,
        22,
        97,
        1,
        245,
        86,
        91,
        97,
        3,
        36,
        132,
        130,
        96,
        5,
        27,
        1,
        97,
        2,
        77,
        86,
        91,
        129,
        129,
        82,
        132,
        129,
        1,
        146,
        80,
        96,
        96,
        145,
        130,
        2,
        132,
        1,
        133,
        1,
        145,
        136,
        131,
        17,
        21,
        97,
        3,
        67,
        87,
        96,
        0,
        128,
        253,
        91,
        147,
        133,
        1,
        147,
        91,
        130,
        133,
        16,
        21,
        97,
        3,
        155,
        87,
        128,
        133,
        138,
        3,
        18,
        21,
        97,
        3,
        96,
        87,
        96,
        0,
        128,
        129,
        253,
        91,
        97,
        3,
        104,
        97,
        2,
        36,
        86,
        91,
        97,
        3,
        113,
        134,
        97,
        2,
        156,
        86,
        91,
        129,
        82,
        97,
        3,
        126,
        135,
        135,
        1,
        97,
        2,
        156,
        86,
        91,
        129,
        136,
        1,
        82,
        96,
        64,
        134,
        129,
        1,
        53,
        144,
        130,
        1,
        82,
        132,
        82,
        147,
        132,
        1,
        147,
        146,
        133,
        1,
        146,
        97,
        3,
        72,
        86,
        91,
        80,
        151,
        150,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        86,
        91,
        127,
        78,
        72,
        123,
        113,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        96,
        0,
        82,
        96,
        50,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        96,
        0,
        127,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        130,
        3,
        97,
        4,
        46,
        87,
        127,
        78,
        72,
        123,
        113,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        96,
        0,
        82,
        96,
        17,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        80,
        96,
        1,
        1,
        144,
        86,
        91,
        96,
        0,
        96,
        32,
        130,
        132,
        3,
        18,
        21,
        97,
        4,
        71,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        81,
        145,
        144,
        80,
        86,
        254,
        162,
        100,
        105,
        112,
        102,
        115,
        88,
        34,
        18,
        32,
        177,
        125,
        110,
        20,
        208,
        87,
        167,
        219,
        70,
        73,
        224,
        164,
        16,
        142,
        251,
        179,
        104,
        191,
        31,
        186,
        110,
        242,
        83,
        225,
        54,
        196,
        12,
        211,
        64,
        180,
        217,
        60,
        100,
        115,
        111,
        108,
        99,
        67,
        0,
        8,
        19,
        0,
        51,
    ];
    ///The bytecode of the contract.
    pub static MOCKEXPECTEDBALANCELIB_BYTECODE: ::ethers::core::types::Bytes = ::ethers::core::types::Bytes::from_static(
        __BYTECODE,
    );
    #[rustfmt::skip]
    const __DEPLOYED_BYTECODE: &[u8] = &[
        96,
        128,
        96,
        64,
        82,
        52,
        128,
        21,
        97,
        0,
        16,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        96,
        4,
        54,
        16,
        97,
        0,
        43,
        87,
        96,
        0,
        53,
        96,
        224,
        28,
        128,
        99,
        227,
        164,
        216,
        107,
        20,
        97,
        0,
        48,
        87,
        91,
        96,
        0,
        128,
        253,
        91,
        97,
        0,
        67,
        97,
        0,
        62,
        54,
        96,
        4,
        97,
        2,
        197,
        86,
        91,
        97,
        0,
        69,
        86,
        91,
        0,
        91,
        97,
        0,
        78,
        129,
        97,
        0,
        81,
        86,
        91,
        80,
        86,
        91,
        96,
        0,
        91,
        129,
        81,
        129,
        16,
        21,
        97,
        1,
        29,
        87,
        96,
        0,
        130,
        130,
        129,
        81,
        129,
        16,
        97,
        0,
        113,
        87,
        97,
        0,
        113,
        97,
        3,
        167,
        86,
        91,
        96,
        32,
        2,
        96,
        32,
        1,
        1,
        81,
        144,
        80,
        96,
        0,
        97,
        0,
        174,
        130,
        96,
        0,
        1,
        81,
        131,
        96,
        32,
        1,
        81,
        115,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        22,
        97,
        1,
        33,
        144,
        145,
        144,
        99,
        255,
        255,
        255,
        255,
        22,
        86,
        91,
        144,
        80,
        129,
        96,
        64,
        1,
        81,
        129,
        16,
        21,
        97,
        1,
        8,
        87,
        128,
        130,
        96,
        64,
        1,
        81,
        96,
        64,
        81,
        127,
        44,
        25,
        184,
        184,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        129,
        82,
        96,
        4,
        1,
        97,
        0,
        255,
        146,
        145,
        144,
        145,
        130,
        82,
        96,
        32,
        130,
        1,
        82,
        96,
        64,
        1,
        144,
        86,
        91,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        80,
        80,
        128,
        128,
        97,
        1,
        21,
        144,
        97,
        3,
        214,
        86,
        91,
        145,
        80,
        80,
        97,
        0,
        84,
        86,
        91,
        80,
        80,
        86,
        91,
        96,
        0,
        115,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        131,
        22,
        97,
        1,
        92,
        87,
        80,
        115,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        129,
        22,
        49,
        97,
        1,
        239,
        86,
        91,
        96,
        64,
        81,
        127,
        112,
        160,
        130,
        49,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        129,
        82,
        115,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        131,
        129,
        22,
        96,
        4,
        131,
        1,
        82,
        132,
        22,
        144,
        99,
        112,
        160,
        130,
        49,
        144,
        96,
        36,
        1,
        96,
        32,
        96,
        64,
        81,
        128,
        131,
        3,
        129,
        134,
        90,
        250,
        21,
        128,
        21,
        97,
        1,
        200,
        87,
        61,
        96,
        0,
        128,
        62,
        61,
        96,
        0,
        253,
        91,
        80,
        80,
        80,
        80,
        96,
        64,
        81,
        61,
        96,
        31,
        25,
        96,
        31,
        130,
        1,
        22,
        130,
        1,
        128,
        96,
        64,
        82,
        80,
        129,
        1,
        144,
        97,
        1,
        236,
        145,
        144,
        97,
        4,
        53,
        86,
        91,
        144,
        80,
        91,
        146,
        145,
        80,
        80,
        86,
        91,
        127,
        78,
        72,
        123,
        113,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        96,
        0,
        82,
        96,
        65,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        96,
        64,
        81,
        96,
        96,
        129,
        1,
        103,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        129,
        17,
        130,
        130,
        16,
        23,
        21,
        97,
        2,
        71,
        87,
        97,
        2,
        71,
        97,
        1,
        245,
        86,
        91,
        96,
        64,
        82,
        144,
        86,
        91,
        96,
        64,
        81,
        96,
        31,
        130,
        1,
        127,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        224,
        22,
        129,
        1,
        103,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        129,
        17,
        130,
        130,
        16,
        23,
        21,
        97,
        2,
        148,
        87,
        97,
        2,
        148,
        97,
        1,
        245,
        86,
        91,
        96,
        64,
        82,
        145,
        144,
        80,
        86,
        91,
        128,
        53,
        115,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        129,
        22,
        129,
        20,
        97,
        2,
        192,
        87,
        96,
        0,
        128,
        253,
        91,
        145,
        144,
        80,
        86,
        91,
        96,
        0,
        96,
        32,
        128,
        131,
        133,
        3,
        18,
        21,
        97,
        2,
        216,
        87,
        96,
        0,
        128,
        253,
        91,
        130,
        53,
        103,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        128,
        130,
        17,
        21,
        97,
        2,
        240,
        87,
        96,
        0,
        128,
        253,
        91,
        129,
        133,
        1,
        145,
        80,
        133,
        96,
        31,
        131,
        1,
        18,
        97,
        3,
        4,
        87,
        96,
        0,
        128,
        253,
        91,
        129,
        53,
        129,
        129,
        17,
        21,
        97,
        3,
        22,
        87,
        97,
        3,
        22,
        97,
        1,
        245,
        86,
        91,
        97,
        3,
        36,
        132,
        130,
        96,
        5,
        27,
        1,
        97,
        2,
        77,
        86,
        91,
        129,
        129,
        82,
        132,
        129,
        1,
        146,
        80,
        96,
        96,
        145,
        130,
        2,
        132,
        1,
        133,
        1,
        145,
        136,
        131,
        17,
        21,
        97,
        3,
        67,
        87,
        96,
        0,
        128,
        253,
        91,
        147,
        133,
        1,
        147,
        91,
        130,
        133,
        16,
        21,
        97,
        3,
        155,
        87,
        128,
        133,
        138,
        3,
        18,
        21,
        97,
        3,
        96,
        87,
        96,
        0,
        128,
        129,
        253,
        91,
        97,
        3,
        104,
        97,
        2,
        36,
        86,
        91,
        97,
        3,
        113,
        134,
        97,
        2,
        156,
        86,
        91,
        129,
        82,
        97,
        3,
        126,
        135,
        135,
        1,
        97,
        2,
        156,
        86,
        91,
        129,
        136,
        1,
        82,
        96,
        64,
        134,
        129,
        1,
        53,
        144,
        130,
        1,
        82,
        132,
        82,
        147,
        132,
        1,
        147,
        146,
        133,
        1,
        146,
        97,
        3,
        72,
        86,
        91,
        80,
        151,
        150,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        86,
        91,
        127,
        78,
        72,
        123,
        113,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        96,
        0,
        82,
        96,
        50,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        96,
        0,
        127,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        130,
        3,
        97,
        4,
        46,
        87,
        127,
        78,
        72,
        123,
        113,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        96,
        0,
        82,
        96,
        17,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        80,
        96,
        1,
        1,
        144,
        86,
        91,
        96,
        0,
        96,
        32,
        130,
        132,
        3,
        18,
        21,
        97,
        4,
        71,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        81,
        145,
        144,
        80,
        86,
        254,
        162,
        100,
        105,
        112,
        102,
        115,
        88,
        34,
        18,
        32,
        177,
        125,
        110,
        20,
        208,
        87,
        167,
        219,
        70,
        73,
        224,
        164,
        16,
        142,
        251,
        179,
        104,
        191,
        31,
        186,
        110,
        242,
        83,
        225,
        54,
        196,
        12,
        211,
        64,
        180,
        217,
        60,
        100,
        115,
        111,
        108,
        99,
        67,
        0,
        8,
        19,
        0,
        51,
    ];
    ///The deployed bytecode of the contract.
    pub static MOCKEXPECTEDBALANCELIB_DEPLOYED_BYTECODE: ::ethers::core::types::Bytes = ::ethers::core::types::Bytes::from_static(
        __DEPLOYED_BYTECODE,
    );
    pub struct MockExpectedBalanceLib<M>(::ethers::contract::Contract<M>);
    impl<M> ::core::clone::Clone for MockExpectedBalanceLib<M> {
        fn clone(&self) -> Self {
            Self(::core::clone::Clone::clone(&self.0))
        }
    }
    impl<M> ::core::ops::Deref for MockExpectedBalanceLib<M> {
        type Target = ::ethers::contract::Contract<M>;
        fn deref(&self) -> &Self::Target {
            &self.0
        }
    }
    impl<M> ::core::ops::DerefMut for MockExpectedBalanceLib<M> {
        fn deref_mut(&mut self) -> &mut Self::Target {
            &mut self.0
        }
    }
    impl<M> ::core::fmt::Debug for MockExpectedBalanceLib<M> {
        fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
            f.debug_tuple(stringify!(MockExpectedBalanceLib))
                .field(&self.address())
                .finish()
        }
    }
    impl<M: ::ethers::providers::Middleware> MockExpectedBalanceLib<M> {
        /// Creates a new contract instance with the specified `ethers` client at
        /// `address`. The contract derefs to a `ethers::Contract` object.
        pub fn new<T: Into<::ethers::core::types::Address>>(
            address: T,
            client: ::std::sync::Arc<M>,
        ) -> Self {
            Self(
                ::ethers::contract::Contract::new(
                    address.into(),
                    MOCKEXPECTEDBALANCELIB_ABI.clone(),
                    client,
                ),
            )
        }
        /// Constructs the general purpose `Deployer` instance based on the provided constructor arguments and sends it.
        /// Returns a new instance of a deployer that returns an instance of this contract after sending the transaction
        ///
        /// Notes:
        /// - If there are no constructor arguments, you should pass `()` as the argument.
        /// - The default poll duration is 7 seconds.
        /// - The default number of confirmations is 1 block.
        ///
        ///
        /// # Example
        ///
        /// Generate contract bindings with `abigen!` and deploy a new contract instance.
        ///
        /// *Note*: this requires a `bytecode` and `abi` object in the `greeter.json` artifact.
        ///
        /// ```ignore
        /// # async fn deploy<M: ethers::providers::Middleware>(client: ::std::sync::Arc<M>) {
        ///     abigen!(Greeter, "../greeter.json");
        ///
        ///    let greeter_contract = Greeter::deploy(client, "Hello world!".to_string()).unwrap().send().await.unwrap();
        ///    let msg = greeter_contract.greet().call().await.unwrap();
        /// # }
        /// ```
        pub fn deploy<T: ::ethers::core::abi::Tokenize>(
            client: ::std::sync::Arc<M>,
            constructor_args: T,
        ) -> ::core::result::Result<
            ::ethers::contract::builders::ContractDeployer<M, Self>,
            ::ethers::contract::ContractError<M>,
        > {
            let factory = ::ethers::contract::ContractFactory::new(
                MOCKEXPECTEDBALANCELIB_ABI.clone(),
                MOCKEXPECTEDBALANCELIB_BYTECODE.clone().into(),
                client,
            );
            let deployer = factory.deploy(constructor_args)?;
            let deployer = ::ethers::contract::ContractDeployer::new(deployer);
            Ok(deployer)
        }
        ///Calls the contract's `check` (0xe3a4d86b) function
        pub fn check(
            &self,
            expected: ::std::vec::Vec<ExpectedBalance>,
        ) -> ::ethers::contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([227, 164, 216, 107], expected)
                .expect("method not found (this should never happen)")
        }
    }
    impl<M: ::ethers::providers::Middleware> From<::ethers::contract::Contract<M>>
    for MockExpectedBalanceLib<M> {
        fn from(contract: ::ethers::contract::Contract<M>) -> Self {
            Self::new(contract.address(), contract.client())
        }
    }
    ///Custom Error type `InsufficientOutput` with signature `InsufficientOutput(uint256,uint256)` and selector `0x2c19b8b8`
    #[derive(
        Clone,
        ::ethers::contract::EthError,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[etherror(name = "InsufficientOutput", abi = "InsufficientOutput(uint256,uint256)")]
    pub struct InsufficientOutput {
        pub actual_balance: ::ethers::core::types::U256,
        pub expected_balance: ::ethers::core::types::U256,
    }
    ///Container type for all input parameters for the `check` function with signature `check((address,address,uint256)[])` and selector `0xe3a4d86b`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "check", abi = "check((address,address,uint256)[])")]
    pub struct CheckCall {
        pub expected: ::std::vec::Vec<ExpectedBalance>,
    }
    ///`ExpectedBalance(address,address,uint256)`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct ExpectedBalance {
        pub recipient: ::ethers::core::types::Address,
        pub token: ::ethers::core::types::Address,
        pub expected_balance: ::ethers::core::types::U256,
    }
}
